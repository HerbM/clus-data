====== Function ARRAY-ELEMENT-TYPE ======
Returns a //[[CL:Glossary:type specifier]]// which represents the //[[CL:Glossary:actual array element type]]// of the array, which is the set of //[[CL:Glossary:object|objects]]// that such an //array// can hold.

(Because of //[[CL:Glossary:array]]// //[[CL:Glossary:upgrade|upgrading]]//, this //[[CL:Glossary:type specifier]]// can in some cases denote a //[[CL:Glossary:supertype]]// of the //[[CL:Glossary:expressed array element type]]// of the //array//.)

====Syntax====
  * **array-element-type** //array// → //typespec//

====Arguments and Values====
  * //array// - an //[[CL:Glossary:array]]//.
  * //typespec// - a //[[CL:Glossary:type specifier]]//.

====Examples====

<blockquote>
(array-element-type ([[CL:Functions:make-array]] 4)) → [[CL:Constant Variables:T]] 
(array-element-type ([[CL:Functions:make-array]] 12 :element-type '([[CL:Types:unsigned-byte]] 8))) → //[[CL:Glossary:implementation-dependent]]// 
(array-element-type ([[CL:Functions:make-array]] 12 :element-type '([[CL:Types:unsigned-byte]] 5))) → //[[CL:Glossary:implementation-dependent]]// 
</blockquote>

----

<blockquote> 
(array-element-type ([[CL:Functions:make-array]] 5 :element-type '([[CL:Type Specifiers:mod]] 5)))
</blockquote> 
could be ''([[CL:Type Specifiers:mod]] 5)'', ''([[CL:Type Specifiers:mod]] 8)'', ''[[CL:Types:fixnum]]'', ''[[CL:Types:t]]'', or any other type of which ''([[CL:Type Specifiers:mod]] 5)'' is a //[[CL:Glossary:subtype]]//.

====Affected By====
The //[[CL:Glossary:implementation]]//.

====Exceptional Situations====
Should signal an error of type **[[CL:Types:type-error]]** if its argument is not an //[[CL:Glossary:array]]//.

====See Also====
**[[CL:Types:array|Type ARRAY]]**, **[[CL:Functions:make-array|Function MAKE-ARRAY]]**, **[[CL:Functions:subtypep|Function SUBTYPEP]]**, **[[CL:Functions:upgraded-array-element-type|Function UPGRADED-ARRAY-ELEMENT-TYPE]]**

====Notes====
None.

\issue{ARRAY-TYPE-ELEMENT-TYPE-SEMANTICS:UNIFY-UPGRADING}
