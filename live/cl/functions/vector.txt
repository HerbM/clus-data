====== Function VECTOR ======

====Syntax====
  * **vector** //''&rest'' objects// → //vector//

====Arguments and Values====
  * //object// - an //[[CL:Glossary:object]]//.
  * //vector// - a //[[CL:Glossary:vector]]// of //[[CL:Glossary:type]]// ''(vector t **[[CL:Functions:*]]**)''.

====Description====
Creates a //[[CL:Glossary:fresh]]// //[[CL:Glossary:simple general vector]]// whose size corresponds to the number of //objects//.

The //[[CL:Glossary:vector]]// is initialized to contain the //objects//.

====Examples====

<blockquote>
([[CL:Macros:defparameter]] *v* (vector 1 2 'sirens)) 
([[CL:Functions:arrayp]] *v*) → //[[CL:Glossary:true]]// 
([[CL:Functions:vectorp]] *v*) → //[[CL:Glossary:true]]// 
([[CL:Functions:simple-vector-p]] *v*) → //[[CL:Glossary:true]]// 
([[CL:Functions:length]] *v*) → 3
</blockquote>

====Side Effects====
None.

====Affected By====
None.

====Exceptional Situations====
None.

====See Also====
**[[CL:Functions:make-array|Function MAKE-ARRAY]]**

====Notes====
**[[CL:Functions:vector]]** is analogous to **[[CL:Functions:list]]**.

<blockquote>
(vector a<sub>1</sub> a<sub>2</sub> ... a<sub>n</sub>) 
  ≡ ([[CL:Functions:make-array]] ([CL:Functions:list]] ''n'') 
                :element-type [[CL:Types:t]] 
                :initial-contents (list a<sub>1</sub> a<sub>2</sub> ... a<sub>n</sub>)))
</blockquote>
