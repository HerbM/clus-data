====== Function COMPILED-FUNCTION-P ======

====Syntax====
  * **compiled-function-p** //object// → //generalized-boolean//

====Arguments and Values====
  * //object// - an //[[CL:Glossary:object]]//.
  * //generalized-boolean// - a //[[CL:Glossary:generalized boolean]]//.

====Description====
Returns //[[CL:Glossary:true]]// if //object// is of //[[CL:Glossary:type]]// **[[CL:Types:compiled-function]]**; otherwise, returns //[[CL:Glossary:false]]//.

====Examples====
<blockquote>
(defun f (x) x) <r>F</r>
(compiled-function-p #'f) 
<r>//[[CL:Glossary:false]]//
//or// //[[CL:Glossary:true]]//</r>
(compiled-function-p 'f) <r>//[[CL:Glossary:false]]// </r>
(compile 'f) <r>F </r>
(compiled-function-p #'f) <r>//[[CL:Glossary:true]]//</r>
(compiled-function-p 'f) <r>//[[CL:Glossary:false]]//</r>
(compiled-function-p (compile nil '(lambda (x) x))) <r>//[[CL:Glossary:true]]//</r>
(compiled-function-p #'(lambda (x) x)) 
<r>//[[CL:Glossary:false]]// 
//or// //[[CL:Glossary:true]]//</r>
(compiled-function-p '(lambda (x) x)) <r>//[[CL:Glossary:false]]//</r>
</blockquote>

====Side Effects====
None.

====Affected By====
None.

====Exceptional Situations====
None.

====See Also====
  * **[[CL:Functions:compile|Function COMPILE]]**
  * **[[CL:Functions:compile-file|Function COMPILE-FILE]]**
  * **[[CL:Functions:compiled-function|Function COMPILED-FUNCTION]]**

====Notes====
<blockquote>
(compiled-function-p //object//) ≡ (typep //object// 'compiled-function)
</blockquote>

