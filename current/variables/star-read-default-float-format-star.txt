====== Variable *READ-DEFAULT-FLOAT-FORMAT* ======

====Value Type====
one of the //[[CL:Glossary:atomic type specifier|atomic type specifiers]]// **[[CL:Types:short-float]]**, **[[CL:Types:single-float]]**, **[[CL:Types:double-float]]**, or **[[CL:Types:long-float]]**, or else some other //[[CL:Glossary:type specifier]]// defined by the //[[CL:Glossary:implementation]]// to be acceptable.

====Initial Value====
The //[[CL:Glossary:symbol]]// **[[CL:Types:single-float]]**.

====Description====
Controls the floating-point format that is to be used when reading a floating-point number that has no //[[CL:Glossary:exponent marker]]// or that has ''e'' or ''E'' for an //[[CL:Glossary:exponent marker]]//. Other //[[CL:Glossary:exponent marker|exponent markers]]// explicitly prescribe the floating-point format to be used.

The printer uses **<nowiki>*read-default-float-format*</nowiki>** to guide the choice of //[[CL:Glossary:exponent markers]]// when printing floating-point numbers.

====Examples====
<blockquote>
([[CL:Special Operators:let]] ((*read-default-float-format* '[[CL:Types:double-float]])) 
  ([[CL:Functions:read-from-string]] "(1.0 1.0e0 1.0s0 1.0f0 1.0d0 1.0L0)")) 
<r>(1.0 1.0 1.0 1.0 1.0 1.0) ; Implementation has float format F. </r>
<r>//or// (1.0 1.0 1.0s0 1.0 1.0 1.0) ; Implementation has float formats S and F. </r>
<r>//or// (1.0d0 1.0d0 1.0 1.0 1.0d0 1.0d0) ; Implementation has float formats F and D. </r>
<r>//or// (1.0d0 1.0d0 1.0s0 1.0 1.0d0 1.0d0) ; Implementation has float formats S, F, D. </r>
<r>//or// (1.0d0 1.0d0 1.0 1.0 1.0d0 1.0L0) ; Implementation has float formats F, D, L. </r>
<r>//or// (1.0d0 1.0d0 1.0s0 1.0 1.0d0 1.0L0) ; Implementation has formats S, F, D, L.</r>
</blockquote>

====Affected By====
None.

====See Also====
None.

====Notes====
None.

